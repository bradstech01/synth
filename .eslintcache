[{"D:\\Programming\\Web\\synth\\synth\\src\\components\\synth\\index.jsx":"1","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\midiMap.js":"2","D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencerStep\\index.jsx":"3","D:\\Programming\\Web\\synth\\synth\\src\\components\\keyboard\\index.jsx":"4","D:\\Programming\\Web\\synth\\synth\\src\\components\\pianoKey\\index.jsx":"5","D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencer\\index.jsx":"6","D:\\Programming\\Web\\synth\\synth\\src\\index.js":"7","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\keyMap.js":"8","D:\\Programming\\Web\\synth\\synth\\src\\components\\visualizer\\index.jsx":"9","D:\\Programming\\Web\\synth\\synth\\src\\reportWebVitals.js":"10","D:\\Programming\\Web\\synth\\synth\\src\\components\\settingsGui\\index.jsx":"11"},{"size":7635,"mtime":1650378249688,"results":"12","hashOfConfig":"13"},{"size":1588,"mtime":1650302007569,"results":"14","hashOfConfig":"13"},{"size":856,"mtime":1650302007567,"results":"15","hashOfConfig":"13"},{"size":2931,"mtime":1650302007565,"results":"16","hashOfConfig":"13"},{"size":2420,"mtime":1650302007566,"results":"17","hashOfConfig":"13"},{"size":6989,"mtime":1650390041098,"results":"18","hashOfConfig":"13"},{"size":538,"mtime":1650302007569,"results":"19","hashOfConfig":"13"},{"size":560,"mtime":1650302007569,"results":"20","hashOfConfig":"13"},{"size":2737,"mtime":1650302007569,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"13"},{"size":14744,"mtime":1650392397782,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10ve4b4",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\Web\\synth\\synth\\src\\components\\synth\\index.jsx",[],["49","50"],"D:\\Programming\\Web\\synth\\synth\\src\\scripts\\midiMap.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencerStep\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\keyboard\\index.jsx",["51"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PianoKey } from '../pianoKey';\r\n\r\n/**\r\n * Component containing the visual keyboard; the \"money maker\", as it were.\r\n * TODO: Fix current hacky CSS for the keyboard, so that it appropriately flexes and is better modularized for different viewports\r\n */\r\nexport class Keyboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    role: PropTypes.string,\r\n    currentlyPlaying: PropTypes.array.isRequired,\r\n    isMouseDown: PropTypes.bool.isRequired,\r\n    isKeyDown: PropTypes.bool.isRequired,\r\n    triggerNote: PropTypes.func.isRequired,\r\n    triggerRelease: PropTypes.func.isRequired,\r\n    setMouseFlag: PropTypes.func.isRequired,\r\n    onMouseDown: PropTypes.func.isRequired,\r\n    onMouseUp: PropTypes.func.isRequired,\r\n  };\r\n\r\n  renderPianoKey(note, octave, octaveShift, triggerKey, hiddenOnMobile) {\r\n    return (\r\n      <PianoKey\r\n        note={note + (octave + octaveShift)}\r\n        isKeyDown={this.props.isKeyDown}\r\n        currentlyPlaying={this.props.currentlyPlaying.includes(\r\n          note + (octave + octaveShift)\r\n        )}\r\n        triggerKey={triggerKey}\r\n        triggerNote={this.props.triggerNote}\r\n        triggerRelease={this.props.triggerRelease}\r\n        onMouseDown={this.props.onMouseDown}\r\n        onMouseUp={this.props.onMouseUp}\r\n        hiddenOnMobile={hiddenOnMobile}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"keyboard\"\r\n        role=\"button\"\r\n        onMouseDown={this.props.setMouseFlag}\r\n        onMouseUp={this.props.setMouseFlag}\r\n      >\r\n        {this.renderPianoKey('C', 3, 0, 'q')}\r\n        {this.renderPianoKey('C#', 3, 0, '2')}\r\n        {this.renderPianoKey('D', 3, 0, 'w')}\r\n        {this.renderPianoKey('D#', 3, 0, '3')}\r\n        {this.renderPianoKey('E', 3, 0, 'e')}\r\n        {this.renderPianoKey('F', 3, 0, 'r')}\r\n        {this.renderPianoKey('F#', 3, 0, '5')}\r\n        {this.renderPianoKey('G', 3, 0, 't')}\r\n        {this.renderPianoKey('G#', 3, 0, '6')}\r\n        {this.renderPianoKey('A', 3, 0, 'y')}\r\n        {this.renderPianoKey('A#', 3, 0, '7')}\r\n        {this.renderPianoKey('B', 3, 0, 'u')}\r\n        {this.renderPianoKey('C', 4, 0, 'z')}\r\n        {this.renderPianoKey('C#', 4, 0, 's', true)}\r\n        {this.renderPianoKey('D', 4, 0, 'x', true)}\r\n        {this.renderPianoKey('D#', 4, 0, 'd', true)}\r\n        {this.renderPianoKey('E', 4, 0, 'c', true)}\r\n        {this.renderPianoKey('F', 4, 0, 'v', true)}\r\n        {this.renderPianoKey('F#', 4, 0, 'g', true)}\r\n        {this.renderPianoKey('G', 4, 0, 'b', true)}\r\n        {this.renderPianoKey('G#', 4, 0, 'h', true)}\r\n        {this.renderPianoKey('A', 4, 0, 'n', true)}\r\n        {this.renderPianoKey('A#', 4, 0, 'j', true)}\r\n        {this.renderPianoKey('B', 4, 0, 'm', true)}\r\n        {this.renderPianoKey('C', 5, 0, ',', true)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\pianoKey\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencer\\index.jsx",["52","53"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Tone from 'tone';\r\nimport { SequencerStep } from '../sequencerStep/index.jsx';\r\n\r\nexport class Sequencer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let steps = [];\r\n    this.steps = steps;\r\n    this.numSteps = 64;\r\n\r\n    this.state = {\r\n      bpm: 120,\r\n      started: false,\r\n      recording: false,\r\n      beat: 0,\r\n    };\r\n\r\n    for (let i = 0; i < this.numSteps; i++) {\r\n      steps[i] = {\r\n        beat: i + 1,\r\n        note: '',\r\n      };\r\n    }\r\n\r\n    this.currentNote = '';\r\n  }\r\n\r\n  static propTypes = {\r\n    synth: PropTypes.object.isRequired,\r\n    currentlyPlaying: PropTypes.array.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === ']') {\r\n        console.log(this.steps);\r\n        console.log(this.state.beat);\r\n      }\r\n    })\r\n    Tone.Transport.scheduleRepeat((time) => {\r\n      // use the callback time to schedule events\r\n      if (\r\n        this.currentNote !== '' &&\r\n        this.steps[this.state.beat].note !== 'hold'\r\n      ) {\r\n        this.props.synth.triggerRelease(this.currentNote, time);\r\n        this.currentNote = '';\r\n      }\r\n      if (\r\n        this.steps[this.state.beat].note !== '' &&\r\n        this.steps[this.state.beat].note !== 'rest' &&\r\n        this.steps[this.state.beat].note !== 'hold'\r\n      ) {\r\n        this.props.synth.triggerAttack(\r\n          this.steps[this.state.beat].note,\r\n          time,\r\n          0.3\r\n        );\r\n        this.currentNote = this.steps[this.state.beat].note;\r\n      }\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n      if (this.steps[this.state.beat].note === '') {\r\n        this.updateActiveBeat(0);\r\n        this.currentNote = this.steps[0].note;\r\n      }\r\n    }, '8n');\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.recording) {\r\n      if (prevProps.currentlyPlaying != this.props.currentlyPlaying) {\r\n        if (this.props.currentlyPlaying.length === 0) {\r\n          this.advanceSequence();\r\n        }\r\n        else {\r\n          this.props.currentlyPlaying.forEach((note) => {\r\n            this.addToSequence(note);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.recording) {\r\n      if ((nextProps.currentlyPlaying != this.props.currentlyPlaying) || (nextState.beat !== this.state.beat)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleSeqStart = (e) => {\r\n    if (this.state.started) {\r\n      Tone.Transport.stop();\r\n      this.setState({ started: false, beat: 0 });\r\n      this.props.synth.triggerRelease(this.currentNote, Tone.now());\r\n      this.currentNote = '';\r\n    } else {\r\n      if (this.state.recording) this.disableRecording();\r\n\r\n      this.setState({ started: false, beat: 0 });\r\n      Tone.Transport.start();\r\n      this.setState({ started: true });\r\n    }\r\n  };\r\n\r\n  handleSeqRecord = (e) => {\r\n    this.setState({ started: false, beat: 0 });\r\n    if (this.state.started) {\r\n      Tone.Transport.stop();\r\n    }\r\n    if (!this.state.recording) {\r\n      this.enableRecording();\r\n    } else {\r\n      this.disableRecording();\r\n    }\r\n  };\r\n\r\n  enableRecording = () => {\r\n    this.setState({ recording: true });\r\n    this.currentStepNotes = [];\r\n  };\r\n\r\n  disableRecording = () => {\r\n    this.setState({ recording: false });\r\n    this.currentStepNotes = null;\r\n  };\r\n\r\n  addToSequence = (note) => {\r\n    if (!this.currentStepNotes.includes(note)) {\r\n      this.currentStepNotes.push(note);\r\n      this.steps[this.state.beat].note = this.currentStepNotes;\r\n    }\r\n  };\r\n\r\n  advanceSequence = () => {\r\n    this.currentStepNotes = [];\r\n    this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n  };\r\n\r\n  handleNoteUpdate = (e) => {\r\n    e.stopPropagation();\r\n    let val = e.target.value;\r\n    if (\r\n      /['A','B','C','D','E','F','G']{1}#{0,1}[1-9]{1}/.exec(val) ||\r\n      val === ''\r\n    ) {\r\n      this.steps[parseInt(e.target.attributes.beat.value) - 1].note = val;\r\n    }\r\n  };\r\n\r\n  updateActiveBeat = (newBeat) => {\r\n    this.setState({ beat: newBeat });\r\n  };\r\n\r\n  raiseBpm = (e) => {\r\n    const newBpm = this.state.bpm + 1;\r\n    this.setState({ bpm: newBpm });\r\n    Tone.Transport.bpm.value = this.state.bpm;\r\n  };\r\n\r\n  lowerBpm = (e) => {\r\n    const newBpm = this.state.bpm - 1;\r\n    this.setState({ bpm: newBpm });\r\n    Tone.Transport.bpm.value = this.state.bpm;\r\n  };\r\n\r\n  addRest = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = 'rest';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  addHold = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = 'hold';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  clearEntry = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = '';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  renderControls = () => {\r\n    return (\r\n      <div className=\"seqControls\">\r\n        <div\r\n          className=\"seqStart\"\r\n          role=\"button\"\r\n          onMouseDown={this.handleSeqStart}\r\n        ></div>\r\n        <div\r\n          className=\"seqRecord\"\r\n          role=\"button\"\r\n          onMouseDown={this.handleSeqRecord}\r\n        ></div>\r\n        <div className=\"bpmBox\">\r\n          <div className=\"bpmDisplayBox\">\r\n            <div className=\"bpmDisplay\">\r\n              <span>{this.state.bpm}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bpmButtons\">\r\n            <div className=\"bpmUp\" onMouseDown={this.raiseBpm} />\r\n            <div className=\"bpmDown\" onMouseDown={this.lowerBpm} />\r\n          </div>\r\n        </div>\r\n        <div className=\"seqCommands\">\r\n          <div className=\"rest\" onMouseDown={this.addRest}>\r\n            <span>rest</span>\r\n          </div>\r\n          <div className=\"hold\" onMouseDown={this.addHold}>\r\n            <span>hold</span>\r\n          </div>\r\n          <div className=\"clear\" onMouseDown={this.clearEntry}>\r\n            <span>clear</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSequence = (steps) => {\r\n    return (\r\n      <div className=\"stepsContainer\">\r\n        <div className=\"steps\">\r\n          {steps.map((step) => {\r\n            return (\r\n              <SequencerStep\r\n                key={step.beat}\r\n                step={step}\r\n                steps={this.steps}\r\n                beat={this.state.beat}\r\n                updateActiveBeat={this.updateActiveBeat}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderStep = (step) => { };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sequencer\">\r\n        {this.renderControls()}\r\n        {this.renderSequence(this.steps)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\index.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\scripts\\keyMap.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\visualizer\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\reportWebVitals.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\settingsGui\\index.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":12,"endColumn":4},{"ruleId":"62","severity":1,"message":"63","line":73,"column":38,"nodeType":"64","messageId":"65","endLine":73,"endColumn":40},{"ruleId":"62","severity":1,"message":"63","line":88,"column":39,"nodeType":"64","messageId":"65","endLine":88,"endColumn":41},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]