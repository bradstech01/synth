[{"D:\\Programming\\Web\\synth\\synth\\src\\components\\synth\\index.jsx":"1","D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencerStep\\index.jsx":"2","D:\\Programming\\Web\\synth\\synth\\src\\components\\keyboard\\index.jsx":"3","D:\\Programming\\Web\\synth\\synth\\src\\components\\pianoKey\\index.jsx":"4","D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencer\\index.jsx":"5","D:\\Programming\\Web\\synth\\synth\\src\\index.js":"6","D:\\Programming\\Web\\synth\\synth\\src\\components\\visualizer\\index.jsx":"7","D:\\Programming\\Web\\synth\\synth\\src\\reportWebVitals.js":"8","D:\\Programming\\Web\\synth\\synth\\src\\components\\settingsGui\\index.jsx":"9","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\midiFunctions.js":"10","D:\\Programming\\Web\\synth\\synth\\src\\components\\oscillatorBox\\index.jsx":"11","D:\\Programming\\Web\\synth\\synth\\src\\components\\oscilloscope\\index.jsx":"12","D:\\Programming\\Web\\synth\\synth\\src\\components\\setting\\index.jsx":"13","D:\\Programming\\Web\\synth\\synth\\src\\components\\lpfEnvBox\\index.jsx":"14","D:\\Programming\\Web\\synth\\synth\\src\\components\\ampEnvBox\\index.jsx":"15","D:\\Programming\\Web\\synth\\synth\\src\\components\\timeFxBox\\index.jsx":"16","D:\\Programming\\Web\\synth\\synth\\src\\components\\voiceFxBox\\index.jsx":"17","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\inputMaps.js":"18","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\settingsAPI.js":"19"},{"size":6426,"mtime":1650599444958,"results":"20","hashOfConfig":"21"},{"size":856,"mtime":1650302007567,"results":"22","hashOfConfig":"21"},{"size":2931,"mtime":1650302007565,"results":"23","hashOfConfig":"21"},{"size":2420,"mtime":1650302007566,"results":"24","hashOfConfig":"21"},{"size":6847,"mtime":1650460119531,"results":"25","hashOfConfig":"21"},{"size":539,"mtime":1650590827535,"results":"26","hashOfConfig":"21"},{"size":1582,"mtime":1650591791146,"results":"27","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"21"},{"size":2151,"mtime":1650600072179,"results":"29","hashOfConfig":"21"},{"size":1367,"mtime":1650589676110,"results":"30","hashOfConfig":"21"},{"size":1723,"mtime":1650592427672,"results":"31","hashOfConfig":"21"},{"size":1355,"mtime":1650591810666,"results":"32","hashOfConfig":"21"},{"size":921,"mtime":1650598503089,"results":"33","hashOfConfig":"21"},{"size":1618,"mtime":1650593780756,"results":"34","hashOfConfig":"21"},{"size":1132,"mtime":1650594307685,"results":"35","hashOfConfig":"21"},{"size":2599,"mtime":1650599044254,"results":"36","hashOfConfig":"21"},{"size":1811,"mtime":1650598994230,"results":"37","hashOfConfig":"21"},{"size":2298,"mtime":1650589531332,"results":"38","hashOfConfig":"21"},{"size":3506,"mtime":1650600212544,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10ve4b4",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\Web\\synth\\synth\\src\\components\\synth\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencerStep\\index.jsx",[],["88","89"],"D:\\Programming\\Web\\synth\\synth\\src\\components\\keyboard\\index.jsx",["90"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PianoKey } from '../pianoKey';\r\n\r\n/**\r\n * Component containing the visual keyboard; the \"money maker\", as it were.\r\n * TODO: Fix current hacky CSS for the keyboard, so that it appropriately flexes and is better modularized for different viewports\r\n */\r\nexport class Keyboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    role: PropTypes.string,\r\n    currentlyPlaying: PropTypes.array.isRequired,\r\n    isMouseDown: PropTypes.bool.isRequired,\r\n    isKeyDown: PropTypes.bool.isRequired,\r\n    triggerNote: PropTypes.func.isRequired,\r\n    triggerRelease: PropTypes.func.isRequired,\r\n    setMouseFlag: PropTypes.func.isRequired,\r\n    onMouseDown: PropTypes.func.isRequired,\r\n    onMouseUp: PropTypes.func.isRequired,\r\n  };\r\n\r\n  renderPianoKey(note, octave, octaveShift, triggerKey, hiddenOnMobile) {\r\n    return (\r\n      <PianoKey\r\n        note={note + (octave + octaveShift)}\r\n        isKeyDown={this.props.isKeyDown}\r\n        currentlyPlaying={this.props.currentlyPlaying.includes(\r\n          note + (octave + octaveShift)\r\n        )}\r\n        triggerKey={triggerKey}\r\n        triggerNote={this.props.triggerNote}\r\n        triggerRelease={this.props.triggerRelease}\r\n        onMouseDown={this.props.onMouseDown}\r\n        onMouseUp={this.props.onMouseUp}\r\n        hiddenOnMobile={hiddenOnMobile}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"keyboard\"\r\n        role=\"button\"\r\n        onMouseDown={this.props.setMouseFlag}\r\n        onMouseUp={this.props.setMouseFlag}\r\n      >\r\n        {this.renderPianoKey('C', 3, 0, 'q')}\r\n        {this.renderPianoKey('C#', 3, 0, '2')}\r\n        {this.renderPianoKey('D', 3, 0, 'w')}\r\n        {this.renderPianoKey('D#', 3, 0, '3')}\r\n        {this.renderPianoKey('E', 3, 0, 'e')}\r\n        {this.renderPianoKey('F', 3, 0, 'r')}\r\n        {this.renderPianoKey('F#', 3, 0, '5')}\r\n        {this.renderPianoKey('G', 3, 0, 't')}\r\n        {this.renderPianoKey('G#', 3, 0, '6')}\r\n        {this.renderPianoKey('A', 3, 0, 'y')}\r\n        {this.renderPianoKey('A#', 3, 0, '7')}\r\n        {this.renderPianoKey('B', 3, 0, 'u')}\r\n        {this.renderPianoKey('C', 4, 0, 'z')}\r\n        {this.renderPianoKey('C#', 4, 0, 's', true)}\r\n        {this.renderPianoKey('D', 4, 0, 'x', true)}\r\n        {this.renderPianoKey('D#', 4, 0, 'd', true)}\r\n        {this.renderPianoKey('E', 4, 0, 'c', true)}\r\n        {this.renderPianoKey('F', 4, 0, 'v', true)}\r\n        {this.renderPianoKey('F#', 4, 0, 'g', true)}\r\n        {this.renderPianoKey('G', 4, 0, 'b', true)}\r\n        {this.renderPianoKey('G#', 4, 0, 'h', true)}\r\n        {this.renderPianoKey('A', 4, 0, 'n', true)}\r\n        {this.renderPianoKey('A#', 4, 0, 'j', true)}\r\n        {this.renderPianoKey('B', 4, 0, 'm', true)}\r\n        {this.renderPianoKey('C', 5, 0, ',', true)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\pianoKey\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\sequencer\\index.jsx",["91","92"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Tone from 'tone';\r\nimport { SequencerStep } from '../sequencerStep/index.jsx';\r\n\r\nexport class Sequencer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let steps = [];\r\n    this.steps = steps;\r\n    this.numSteps = 64;\r\n\r\n    this.state = {\r\n      bpm: 120,\r\n      started: false,\r\n      recording: false,\r\n      beat: 0,\r\n    };\r\n\r\n    for (let i = 0; i < this.numSteps; i++) {\r\n      steps[i] = {\r\n        beat: i + 1,\r\n        note: '',\r\n      };\r\n    }\r\n\r\n    this.currentNote = '';\r\n  }\r\n\r\n  static propTypes = {\r\n    synth: PropTypes.object.isRequired,\r\n    currentlyPlaying: PropTypes.array.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    Tone.Transport.scheduleRepeat((time) => {\r\n      // reminder to use the callback time to schedule events\r\n      if (\r\n        this.currentNote !== '' &&\r\n        this.steps[this.state.beat].note !== 'hold'\r\n      ) {\r\n        //this.props.synth.triggerRelease(this.currentNote, time);\r\n        this.currentNote = '';\r\n      }\r\n      if (\r\n        this.steps[this.state.beat].note !== '' &&\r\n        this.steps[this.state.beat].note !== 'rest' &&\r\n        this.steps[this.state.beat].note !== 'hold'\r\n      ) {\r\n        this.props.synth.triggerAttackRelease(\r\n          this.steps[this.state.beat].note, '8n',\r\n          time,\r\n          0.3\r\n        );\r\n        this.currentNote = this.steps[this.state.beat].note;\r\n      }\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n      if (this.steps[this.state.beat].note === '') {\r\n        this.updateActiveBeat(0);\r\n        this.currentNote = this.steps[0].note;\r\n      }\r\n    }, '8n');\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.recording) {\r\n      if (prevProps.currentlyPlaying != this.props.currentlyPlaying) {\r\n        if (this.props.currentlyPlaying.length === 0) {\r\n          this.advanceSequence();\r\n        }\r\n        else {\r\n          this.props.currentlyPlaying.forEach((note) => {\r\n            this.addToSequence(note);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.recording) {\r\n      if ((nextProps.currentlyPlaying != this.props.currentlyPlaying) || (nextState.beat !== this.state.beat)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleSeqStart = (e) => {\r\n    if (this.state.started) {\r\n      Tone.Transport.stop();\r\n      this.setState({ started: false, beat: 0 });\r\n      this.props.synth.triggerRelease(this.currentNote, Tone.now());\r\n      this.currentNote = '';\r\n    } else {\r\n      if (this.state.recording) this.disableRecording();\r\n\r\n      this.setState({ started: false, beat: 0 });\r\n      Tone.Transport.start();\r\n      this.setState({ started: true });\r\n    }\r\n  };\r\n\r\n  handleSeqRecord = (e) => {\r\n    this.setState({ started: false, beat: 0 });\r\n    if (this.state.started) {\r\n      Tone.Transport.stop();\r\n    }\r\n    if (!this.state.recording) {\r\n      this.enableRecording();\r\n    } else {\r\n      this.disableRecording();\r\n    }\r\n  };\r\n\r\n  enableRecording = () => {\r\n    this.setState({ recording: true });\r\n    this.currentStepNotes = [];\r\n  };\r\n\r\n  disableRecording = () => {\r\n    this.setState({ recording: false });\r\n    this.currentStepNotes = null;\r\n  };\r\n\r\n  addToSequence = (note) => {\r\n    if (!this.currentStepNotes.includes(note)) {\r\n      this.currentStepNotes.push(note);\r\n      this.steps[this.state.beat].note = this.currentStepNotes;\r\n    }\r\n  };\r\n\r\n  advanceSequence = () => {\r\n    this.currentStepNotes = [];\r\n    this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n  };\r\n\r\n  handleNoteUpdate = (e) => {\r\n    e.stopPropagation();\r\n    let val = e.target.value;\r\n    if (\r\n      /['A','B','C','D','E','F','G']{1}#{0,1}[1-9]{1}/.exec(val) ||\r\n      val === ''\r\n    ) {\r\n      this.steps[parseInt(e.target.attributes.beat.value) - 1].note = val;\r\n    }\r\n  };\r\n\r\n  updateActiveBeat = (newBeat) => {\r\n    this.setState({ beat: newBeat });\r\n  };\r\n\r\n  raiseBpm = (e) => {\r\n    const newBpm = this.state.bpm + 1;\r\n    this.setState({ bpm: newBpm });\r\n    Tone.Transport.bpm.value = this.state.bpm;\r\n  };\r\n\r\n  lowerBpm = (e) => {\r\n    const newBpm = this.state.bpm - 1;\r\n    this.setState({ bpm: newBpm });\r\n    Tone.Transport.bpm.value = this.state.bpm;\r\n  };\r\n\r\n  addRest = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = 'rest';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  addHold = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = 'hold';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  clearEntry = (e) => {\r\n    if (this.state.recording) {\r\n      this.steps[this.state.beat].note = '';\r\n      this.updateActiveBeat((this.state.beat + 1) % this.numSteps);\r\n    }\r\n  };\r\n\r\n  renderControls = () => {\r\n    return (\r\n      <div className=\"seqControls\">\r\n        <div\r\n          className=\"seqStart\"\r\n          role=\"button\"\r\n          onMouseDown={this.handleSeqStart}\r\n        ></div>\r\n        <div\r\n          className=\"seqRecord\"\r\n          role=\"button\"\r\n          onMouseDown={this.handleSeqRecord}\r\n        ></div>\r\n        <div className=\"bpmBox\">\r\n          <div className=\"bpmDisplayBox\">\r\n            <div className=\"bpmDisplay\">\r\n              <span>{this.state.bpm}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bpmButtons\">\r\n            <div className=\"bpmUp\" onMouseDown={this.raiseBpm} />\r\n            <div className=\"bpmDown\" onMouseDown={this.lowerBpm} />\r\n          </div>\r\n        </div>\r\n        <div className=\"seqCommands\">\r\n          <div className=\"rest\" onMouseDown={this.addRest}>\r\n            <span>rest</span>\r\n          </div>\r\n          <div className=\"hold\" onMouseDown={this.addHold}>\r\n            <span>hold</span>\r\n          </div>\r\n          <div className=\"clear\" onMouseDown={this.clearEntry}>\r\n            <span>clear</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSequence = (steps) => {\r\n    return (\r\n      <div className=\"stepsContainer\">\r\n        <div className=\"steps\">\r\n          {steps.map((step) => {\r\n            return (\r\n              <SequencerStep\r\n                key={step.beat}\r\n                step={step}\r\n                steps={this.steps}\r\n                beat={this.state.beat}\r\n                updateActiveBeat={this.updateActiveBeat}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderStep = (step) => { };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sequencer\">\r\n        {this.renderControls()}\r\n        {this.renderSequence(this.steps)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\index.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\visualizer\\index.jsx",[],"D:\\Programming\\Web\\synth\\synth\\src\\reportWebVitals.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\settingsGui\\index.jsx",["93","94"],"D:\\Programming\\Web\\synth\\synth\\src\\scripts\\midiFunctions.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\components\\oscillatorBox\\index.jsx",["95"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function OscillatorBox(props) {\r\n\r\n    const renderSelectSetting = (subProp, settingName, optionAry) => {\r\n        return (\r\n            <div className=\"oscillatorSelect grid\">\r\n                {optionAry.map((option) => {\r\n                    return (\r\n                        <div key={option} className={'osc' + option}>\r\n                            <label className='radioContainer'>\r\n                                <input\r\n                                    key={option}\r\n                                    type=\"radio\"\r\n                                    name={settingName}\r\n                                    section={subProp}\r\n                                    value={option}\r\n                                    checked={\r\n                                        props.synthSettings[subProp][settingName] === option\r\n                                    }\r\n                                    onChange={(e) => { props.onChange(e.target.value, subProp, settingName) }}\r\n                                />\r\n                                <span>{option}</span>\r\n                            </label>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"oscillatorSelection\">\r\n            <div className=\"settingsHdr\">oscillator</div>\r\n            <div className=\"settingGrp\">\r\n                {renderSelectSetting('oscillator', 'type', [\r\n                    'sine',\r\n                    'sawtooth',\r\n                    'square',\r\n                    'triangle',\r\n                ])}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\oscilloscope\\index.jsx",["96"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Uses props.dataArray to output audio data on an HTML canvas element.\r\n */\r\n\r\nexport function Oscilloscope(props) {\r\n    const canvasRef = React.useRef(null);\r\n    React.useEffect(draw);\r\n\r\n    function draw() {\r\n        if (!canvasRef.current) return () => { };\r\n\r\n        const canvas = canvasRef.current;\r\n        const canvasCtx = canvas.getContext(\"2d\");\r\n\r\n        if (!canvasCtx) return;\r\n\r\n        const WIDTH = canvas.width;\r\n        const HEIGHT = canvas.height;\r\n\r\n        canvasCtx.fillStyle = \"rgb(0,0,0)\";\r\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n        canvasCtx.lineWidth = 1;\r\n        canvasCtx.strokeStyle = \"rgb(255, 255, 255)\";\r\n\r\n        canvasCtx.beginPath();\r\n\r\n        const sliceWidth = (WIDTH * 1.0) / props.bufferLength;\r\n        let x = 0;\r\n\r\n        for (let i = 0; i < props.bufferLength; i++) {\r\n            const v = (props.dataArray[i] ?? 0) / 128.0;\r\n            const y = (v * HEIGHT) / 2;\r\n\r\n            if (i === 0) {\r\n                canvasCtx.moveTo(x, y);\r\n            } else {\r\n                canvasCtx.lineTo(x, y);\r\n            }\r\n\r\n            x += sliceWidth;\r\n        }\r\n\r\n        canvasCtx.lineTo(WIDTH, HEIGHT / 2);\r\n        canvasCtx.stroke();\r\n    }\r\n\r\n    return <canvas className=\"waveform\" ref={canvasRef} />;\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\setting\\index.jsx",["97"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Setting(props) {\r\n    return (\r\n        <div className={'setting ' + props.css ? props.css : ''}>\r\n            <label className=\"textCenter\" >{props.label}</label>\r\n            <div className=\"sliderWrapper\">\r\n                <input\r\n                    className=\"innerSetting slider\"\r\n                    type=\"range\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    value={props.synthSettings[props.settingGrp][props.settingName]}\r\n                    step={props.step}\r\n                    onChange={(e) => { props.onChange(e.target.value, props.settingGrp, props.settingName) }}\r\n                />\r\n            </div>\r\n            <span className=\"textCenter\">\r\n                {props.synthSettings[props.settingGrp][props.settingName]}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\lpfEnvBox\\index.jsx",["98"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Setting } from '../setting';\r\n\r\n//lpf = low pass filter\r\n//box that contains settings for low pass filter & ADSR envelope\r\n\r\nexport function LpfEnvBox(props) {\r\n    return (\r\n        <div className=\"lpfEnv settingBox\">\r\n            <div className=\"settingsHdr\">filter env</div>\r\n            <div className=\"settingGrp lpfSettings\">\r\n                <Setting label=\"cutoff\" settingGrp=\"filterEnvelope\" settingName=\"baseFrequency\" css=\"lpFreq\" min={0} max={500} step={1} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"env amt\" settingGrp=\"filterEnvelope\" settingName=\"octaves\" css=\"freq\" min={0} max={16} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"attack\" settingGrp=\"filterEnvelope\" settingName=\"attack\" css=\"lpA\" min={0} max={4} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"decay\" settingGrp=\"filterEnvelope\" settingName=\"decay\" css=\"lpD\" min={0} max={4} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"sustain\" settingGrp=\"filterEnvelope\" settingName=\"sustain\" css=\"lpS\" min={0} max={1} step={.1} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"release\" settingGrp=\"filterEnvelope\" settingName=\"release\" css=\"lpR\" min={0} max={11} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\ampEnvBox\\index.jsx",["99"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Setting } from '../setting';\r\n\r\n//lpf = low pass filter\r\n//box that contains settings for low pass filter & ADSR envelope\r\n\r\nexport function AmpEnvBox(props) {\r\n    return (\r\n        <div className=\"ampEnv\">\r\n            <div className=\"settingsHdr\">amp env</div>\r\n            <div className=\"ampSettings\">\r\n                <Setting label=\"attack\" settingGrp=\"envelope\" settingName=\"attack\" min={0} max={4} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"decay\" settingGrp=\"envelope\" settingName=\"decay\" min={0} max={4} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"sustain\" settingGrp=\"envelope\" settingName=\"sustain\" min={0} max={1} step={.1} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                <Setting label=\"release\" settingGrp=\"envelope\" settingName=\"release\" min={0} max={11} step={.5} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\components\\timeFxBox\\index.jsx",["100"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Setting } from '../setting';\r\n\r\n//lpf = low pass filter\r\n//box that contains settings for low pass filter & ADSR envelope\r\n\r\nexport function TimeFxBox(props) {\r\n    return (\r\n        <div className=\"timeFx\">\r\n            <div className=\"delay\">\r\n                <div className=\"settingsHdr\">delay</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"time\" settingGrp=\"delay\" settingName=\"delayTime\" css='gc1 gr1' min={0} max={1} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"repeat\" settingGrp=\"delay\" settingName=\"feedback\" css='gc2e gr1' min={0} max={1} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"reverb\">\r\n                <div className=\"settingsHdr\">reverb</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"mix\" settingGrp=\"reverb\" settingName=\"wet\" css='gc1 gr1' min={0} max={1} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"decay\" settingGrp=\"reverb\" settingName=\"decay\" css='gc2 gr1' min={0} max={10} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"chorus\">\r\n                <div className=\"settingsHdr\">chorus</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"freq\" settingGrp=\"chorus\" settingName=\"frequency\" css='gc1 gr1' min={0} max={10} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"depth\" settingGrp=\"chorus\" settingName=\"depth\" css='gc2 gr1' min={0} max={10} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"tremolo\">\r\n                <div className=\"settingsHdr\">tremolo</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"freq\" settingGrp=\"tremolo\" settingName=\"frequency\" css='gc1 gr1' min={0} max={10} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"depth\" settingGrp=\"tremolo\" settingName=\"depth\" css='gc2 gr1' min={0} max={10} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Programming\\Web\\synth\\synth\\src\\components\\voiceFxBox\\index.jsx",["101"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Setting } from '../setting';\r\n\r\n//lpf = low pass filter\r\n//box that contains settings for low pass filter & ADSR envelope\r\n\r\nexport function VoiceFxBox(props) {\r\n    return (\r\n        <div className=\"voiceFx\">\r\n            <div className=\"width\">\r\n                <div className=\"settingsHdr\">width</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"stereo amt\" settingGrp=\"stereoWidener\" settingName=\"width\" min={0} max={1} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"eq\">\r\n                <div className=\"settingsHdr\">equalizer</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"low\" settingGrp=\"eq\" settingName=\"low\" css=' gc1 gr1' min={-6} max={6} step={0.25} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"mid\" settingGrp=\"eq\" settingName=\"mid\" css=' gc2 gr1' min={-6} max={6} step={0.25} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                    <Setting label=\"high\" settingGrp=\"eq\" settingName=\"high\" css=' gc3 gr1' min={-6} max={6} step={0.25} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"distortion\">\r\n                <div className=\"settingsHdr\">distortion</div>\r\n                <div className=\"settingGrp\">\r\n                    <Setting label=\"distortion\" settingGrp=\"distortion\" settingName=\"amount\" min={0} max={1} step={0.01} synthSettings={props.synthSettings} onChange={props.onChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\Web\\synth\\synth\\src\\scripts\\inputMaps.js",[],"D:\\Programming\\Web\\synth\\synth\\src\\scripts\\settingsAPI.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":10,"column":3,"nodeType":"108","messageId":"109","endLine":12,"endColumn":4},{"ruleId":"110","severity":1,"message":"111","line":67,"column":38,"nodeType":"112","messageId":"113","endLine":67,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":82,"column":39,"nodeType":"112","messageId":"113","endLine":82,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":3,"column":13,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"118","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Tone' is defined but never used.","Identifier","unusedVar","'Setting' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]