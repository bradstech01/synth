@use "sass:math";

* {
  user-select: none;
}

h1,h2 {
  height: 20vh;
}

h1 {
  font-size: 5rem;
}

h2 {
  font-size: 3rem;
}

.debug {
  border: 1px solid red;
}

.waveform {
  width: 100%;
  height: 100%;
}

.btn {
  padding: 2%;
  width: 2%;
  margin: 2%;
}

.canvas {
  width: 10%;
}

.splash {
  height: 100vh;
  width: 100vw;
  text-align: center;
  background-color: black;
  overflow: hidden;
  color: #fff;
}

.visualizer,.musicGui,.settingsGui {
  background-color: #000;
  color: #fff;
}
.visualizer {
  height: 100%;
}
.musicGui {
  height: 25%;
}

.textCenter {
  text-align: center;
}

.settingsHdr {
  font-size: 1.2rem;
  text-align: center;
}



@media only screen and (max-device-width: 480px) {

  $keyboard_Width:  100vh;
  $keyboard_Height: ($keyboard_Width * 0.18  );
  $border_Width:    ($keyboard_Width * 0.0015);
  $whiteKey_Count:  21;
  $whiteKey_Height: $keyboard_Height;
  $whiteKey_Width:  math.div($keyboard_Width, $whiteKey_Count);
  $blackKey_Height: ($whiteKey_Height * 0.55);
  $blackKey_Width:  ($whiteKey_Width  * 0.55);
  $blackKey_Offset: (-(math.div($blackKey_Width, 2)) - $border_Width);
  
  $whiteKey_Color:       #CBCBCB;
  $blackKey_Color:       #222222;
  $blackKey_BorderColor: #000000;
  $whiteKey_BorderColor: #AAAAAA;

  .wrapper {
    height: 100vh;
    width: 100vw;
    overflow-x:hidden;
    overflow-y: hidden;
    display: grid;
    
    background-color: black;
  }

  .visualizer {
    width: 100%;
    height: 33%;
    position: relative;
  }

  .settingsGui {
    width: 100%;
    height: 33%;
    position: relative; 

    display: grid;
  }

  .osc {
    grid-column-start: 1;
  }

  .lpEnv {
    grid-column-start: 2;
  }

  .ampEnv {
    grid-column-start: 3;
  }

  .lpFreq {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .lpA {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .lpD {
    grid-column: 1 / 1;
    grid-row: 3 / 3;
  }

  .lpS {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }

  .lpR {
    grid-column: 2 / 2;
    grid-row: 3 / 3;
  }

  .ampA {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .ampD {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .ampS {
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .ampR {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }

  .oscsine {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .oscsawtooth {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .oscsquare {
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .osctriangle {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }
  
  .settingGrp {
    display: grid;
  }

  .setting {  
    display: flex;
    flex-flow: column nowrap;
    max-width: 50px;
    flex-shrink: 4;
  }

  .innerSetting {
    flex-shrink: 2;
  }

  .musicGui {
    width:            100%;
    height:           33%;
    display:          flex;
    margin:           auto;
    justify-content:  center;
    align-items:      center;
    background-color: #000;
  }

  .keyboard > .pianoKey:last-child{
    border-right: $border_Width solid $whiteKey_BorderColor;
  }

  .keyWhite {
    height:           $whiteKey_Height;
    width:            $whiteKey_Width;
    z-index:          1;
    border-top:       $border_Width solid $whiteKey_BorderColor;
    border-bottom:    $border_Width solid $whiteKey_BorderColor;
    border-left:      $border_Width solid $whiteKey_BorderColor;
    background-color: $whiteKey_Color;
  }

  .keyBlack {
    height:           $blackKey_Height;
    width:            $blackKey_Width;
    z-index:          2;
    border:           $border_Width solid $blackKey_BorderColor;
    background-color: $blackKey_Color;
  }

  .a, .b, .d, .e, .g, .keyBlack{
    margin: 0 0 0 $blackKey_Offset;
  }

  .pianoKey {
    float: left;
    position: relative;
    display: flex;
    justify-content: center;
  }

  .keyPressed {
    background-color: lightgrey;
  }

  .keyText {
    opacity: 0;
  }
}

















@media only screen and (min-device-width: 481px) {
  $keyboard_Width:  55vw;
  $keyboard_Height: ($keyboard_Width * 0.18  );
  $border_Width:    ($keyboard_Width * 0.0015);
  $whiteKey_Count:  21;
  $whiteKey_Height: $keyboard_Height;
  $whiteKey_Width:  ($keyboard_Width / $whiteKey_Count);
  $blackKey_Height: ($whiteKey_Height * 0.55);
  $blackKey_Width:  ($whiteKey_Width  * 0.55);
  $blackKey_Offset: (-($blackKey_Width / 2) - $border_Width);

  $whiteKey_Color:       #eee;
  $blackKey_Color:       #222222;
  $blackKey_BorderColor: #000000;
  $whiteKey_BorderColor: #AAAAAA;

  .wrapper {
    height: 100vh;
    width: 100vw;

    background-color: black;

    /*overflow-x: hidden;
    overflow-y: hidden;*/
    display: grid;
    grid-template-columns: repeat(3,minmax(0,33.333%));
    grid-template-rows: repeat(3, minmax(0,33.333%));
    column-gap: normal;
  }

  .visualizerContainer {
    grid-row: 2 / 2;
    grid-column: 2 / 2;
    height: 25vh;
    width: 25vw;
    padding: 1px;
    background-color: white;
    clip-path: circle();
    z-index: 1;
  }

  .musicGui {
    width: 33vw;
    min-height: 33vh;
    grid-area: 3 / 1 / 3 / 2;
  }

  .sequencer {
    width: 33vw;
    height: 33vh;

    grid-area: 3 / 2 / 3 / 3;
  }

  .settingsGuiLeft {
    width: 30vw;
    height: 33vh;
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    grid-template-columns: repeat(3,minmax(auto,33.333%));
    grid-template-rows: repeat(2, minmax(auto,50%));

    display: grid;
  }

  .settingsGuiMid {
    height: 33vh;
    width: 40vw;

    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .settingsGuiRight {
    height: 33vh;
    width: 30vw;

    grid-column: 3 / 3;
    grid-row: 1 / 1;
  }

  .voiceSettings {
    grid-template-columns: repeat(3,fr);
    grid-template-rows: 1fr;
  }

  .voiceFx {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    display: grid;
    grid-template-columns: auto;
  }

  .width {
    width: 5vw;
    height: 20vh;
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .eq {
    width: 15vw;
    height: 20vh;
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .distortion {
    width: 15vw;
    height: 20vh;
    grid-column: 3 / 3;
    grid-row: 1 / 1;
  }

  .visualizer {
    height: 100%;
    width: 100%;
    shape-outside: circle();
    clip-path: circle();
  }

  .oscillatorSelection {
    width: 15vw;
    height: 15vh;
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .ampEnv {
    width: 15vw;
    height: 15vh;
    grid-column: 1 / 1;
    grid-row: 2 / 3;
  }

  .lpfEnv {
    width: 15vw;
    height: 25vh;
    grid-column: 2 / 2;
    grid-row: 1 / 3;
  }

  .settingBox {
    display: flex;
    flex-flow: column nowrap;
  }

  .lpfSettings {
    display: grid;
    grid-template-columns: repeat(4,minmax(0,25%));
    grid-template-rows: repeat(2,minmax(0,50%));
  }


  .step {
    background-color: #eee;
    width: 50px;
    height: 50px;
    border-radius: 1px;
    border: 1px solid #222;

    display: grid;
    justify-content: center;
  }

  .steps {
    grid-auto-columns: max-content;
    column-gap: 1px;
  }

  .activeStep {
    background-color: #bbb;
  }

  .seqControls {
    display: grid;
    grid-template-columns: repeat(5,minmax(0,20%));
    grid-template-rows: 1fr;
    grid-gap: 2px;
  }

  .seqStart {
    grid-area: 1 / 1 / 1 / 1;

    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 2.5vh 0vh 2.5vh 5vh;
    border-color: transparent transparent transparent #fff;
    border-radius: 3px;
    }  

  .seqRecord {
    grid-area: 1 / 2 / 1 / 2;
    width: 5vh;
    height: 5vh;
    font-size: 0;
    background-color: red;
    border: 0;
    border-radius: 5vh;
    margin: 2.5vh;
    outline: none;
  }  

  .bpmDisplay {
    grid-area: 1 / 3 / 1 / 3;
    width: 5vh;
    height: 3vh;
    border: 1px solid white;
    border-radius: 2px;
    text-align: center;
    color: white;
    background-color: black;
  }

  .bpmButtons {
    grid-area: 1 / 4 / 1 / 4;
    height: 4vh;
    width: 4vh;
  }

  .bpmUp {
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 2vh 2vh 2vh 2vh;
    border-color: transparent transparent #fff transparent;
    border-radius: 3px;
  }

  .bpmDown {
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 2vh 2vh 2vh 2vh;
    border-color: #fff transparent transparent transparent;
    border-radius: 3px;
  }

  .restHold {
    width: 8vh;
    height: 4vh;
  }

  .stepInput { 
    width: 60%;
    height: 40%;
  }

  .rest,.hold {
    color: white;
    border-radius:4px;
    border: 1px solid grey;
    margin: 2px;
    text-align: center;
  }

  .grid {
    display: grid;
    column-gap: 5px;
  }


  .marg5 {
    margin: 5px;
  }

  .gr1 {
    grid-row: 1 / 1;
  }

  .gr2 {
    grid-row: 2 / 2;
  }

  .gc1 {
    grid-column: 1 / 1;
  }

  .gc2 {
    grid-column: 2 / 2;
  }

  .gc3 {
    grid-column: 3 / 3;
  }

  .gc4 {
    grid-column: 4 / 4;
  }

  .gc4span2 {
    grid-column: 4 / 5;
  }

  .gc5 {
    grid-column: 5 / 5;
  }

  .gc6 {
    grid-column: 6 / 6;
  }

  .gc7 {
    grid-column: 7 / 7;
  }

  .gc8 {
    grid-column: 8 / 8;
  }



  .freq {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .lpFreq {
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .lpA {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .lpD {
    grid-column: 1 / 1;
    grid-row: 3 / 3;
  }

  .lpS {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }

  .lpR {
    grid-column: 2 / 2;
    grid-row: 3 / 3;
  }

  .ampA {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .ampD {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .ampS {
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .ampR {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }

  .oscsine {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  .oscsawtooth {
    grid-column: 1 / 1;
    grid-row: 2 / 2;
  }

  .oscsquare {
    grid-column: 2 / 2;
    grid-row: 1 / 1;
  }

  .osctriangle {
    grid-column: 2 / 2;
    grid-row: 2 / 2;
  }

  .slider {
    transform: rotate(270deg);
    width: 50px;
    margin-top: 20px;
  }

  .sliderWrapper {
    height: 60px;
  }
  
  .settingGrp {
    display: grid;
    border: 1px solid white;
    border-radius: 3px;
  }

  .setting {  
    display: flex;
    flex-flow: column nowrap;
    max-width: 50px;
    flex-shrink: 4;
  }

  .innerSetting {
    flex-shrink: 2;
  }

  .keyboard {
    width: 100%;
    height: 100%;
  }

  .keyboard > .pianoKey:last-child{
    border-right: $border_Width solid $whiteKey_BorderColor;
  }

  .keyWhite {
    height:           $whiteKey_Height;
    width:            $whiteKey_Width;
    z-index:          1;
    border-top:       $border_Width solid $whiteKey_BorderColor;
    border-bottom:    $border_Width solid $whiteKey_BorderColor;
    border-left:      $border_Width solid $whiteKey_BorderColor;
    background-color: $whiteKey_Color;
    color: black;
  }

  .keyBlack {
    height:           $blackKey_Height;
    width:            $blackKey_Width;
    z-index:          2;
    border:           $border_Width solid $blackKey_BorderColor;
    background-color: $blackKey_Color;
    color: white;
  }

  .a, .b, .d, .e, .g, .keyBlack{
    margin: 0 0 0 $blackKey_Offset;
  }

  .pianoKey {
    float: left;
    position: relative;
    display: flex;
    justify-content: center;
  }

  .keyPressed {
    background-color: lightgrey;
  }

  .keyText {
    position: absolute;
    text-align: center;
    bottom: 10%;
    width: 50%;
  }
}